// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URI")
  extensions = [postgis]
}

model Account {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String
  flights Flight[]
}

model Airline {
  id        Int        @id @default(autoincrement())
  name      String
  country   String
  IATA_code String
  ICAO_code String
  aircrafts Aircraft[]
  flights   Flight[] // Corrected naming convention
}

model Aircraft {
  id              Int      @id @default(autoincrement())
  model           String
  manufacturer    String
  capacity        Int
  airlineId       Int
  healthMetrics   Json
  lastMaintenance DateTime

  airline Airline  @relation(fields: [airlineId], references: [id])
  flights Flight[]
}

model Airport {
  code               String   @id
  name               String
  city               String
  country            String
  location           Float[] // Use a supported type for geographical Float[]s
  elevation          Int
  flightsOrigin      Flight[] @relation("FlightsOrigin")
  flightsDestination Flight[] @relation("FlightsDestination")
}

model Flight {
  id                 Int                                     @id @default(autoincrement())
  aircraftId         Int?
  userId             Int
  originCode         String
  flightNumber       Int?
  destinationCode    String
  scheduledDeparture DateTime
  scheduledArrival   DateTime
  actualDeparture    DateTime?
  actualArrival      DateTime?
  status             String
  currLocation       Json?
  altitude           Float?
  plannedRoute       Unsupported("geography(Point, 4326)")[] // Use a supported type for geographical Float[]s
  currentRoute       Unsupported("geography(Point, 4326)")[] // Use a supported type for geographical Float[]s
  riskAssessment     RiskAssessment?
  lastUpdated        DateTime

  aircraft         Aircraft?          @relation(fields: [aircraftId], references: [id])
  origin           Airport            @relation("FlightsOrigin", fields: [originCode], references: [code])
  destination      Airport            @relation("FlightsDestination", fields: [destinationCode], references: [code])
  account          Account            @relation(fields: [userId], references: [id])
  notifications    Notification[]
  WeatherCondition WeatherCondition[]
  Airline          Airline?           @relation(fields: [airlineId], references: [id])
  airlineId        Int?
}

model WeatherCondition {
  id            Int      @id @default(autoincrement())
  timestamp     DateTime
  location      Float[] // Use a supported type for geographical Float[]s
  temperature   Float
  windSpeed     Float
  windDirection Float
  humidity      Float
  visibility    Float
  condition     String
  Flight        Flight   @relation(fields: [flightId], references: [id])

  riskAssessments RiskAssessment[]
  flightId        Int
}

model RiskAssessment {
  id                 Int      @id @default(autoincrement())
  flightId           Int      @unique
  timestamp          DateTime
  weatherConditionId Int
  electronicFailure  Boolean
  visibilityIssue    Boolean
  otherRisks         Json?    @db.JsonB
  riskLevel          String
  suggestedAction    String

  flight           Flight           @relation(fields: [flightId], references: [id])
  weatherCondition WeatherCondition @relation(fields: [weatherConditionId], references: [id])
}

model SystemLog {
  id          Int      @id @default(autoincrement())
  timestamp   DateTime
  systemEvent String
  eventType   String
  details     String
  tsvDetails  String?
}

model Notification {
  id           Int      @id @default(autoincrement())
  flightId     Int
  timestamp    DateTime
  message      String
  severity     String
  acknowledged Boolean

  flight Flight @relation(fields: [flightId], references: [id])
}
